

services:
  # --- Infrastructure ---
  postgres:
    image: postgres:14-alpine
    volumes: [postgres_data:/var/lib/postgresql/data/]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports: ["5432:5432"]

  redis:
    image: redis:7-alpine
    volumes: [redis_data:/data]

  # --- Backend Services ---
  api_gateway:
    build:
      context: ./backend
      dockerfile: api_gateway/Dockerfile
    ports: ["8000:8000"]
    env_file: ./.env
    volumes:
      - ./backend:/app
    depends_on: [economic_service, sentiment_service, technicals_service, cross_asset_service]

  economic_service:
    build:
      context: ./backend
      dockerfile: services/economic_service/Dockerfile
    env_file: ./.env
    volumes:
      - ./backend:/app
    depends_on: [redis]

  sentiment_service:
    build:
      context: ./backend
      dockerfile: services/sentiment_service/Dockerfile
    env_file: ./.env
    volumes:
      - ./backend:/app
    depends_on: [redis]

  technicals_service:
    build:
      context: ./backend
      dockerfile: services/technicals_service/Dockerfile
    env_file: ./.env
    volumes:
      - ./backend:/app
    depends_on: [redis]

  cross_asset_service:
    build:
      context: ./backend
      dockerfile: services/cross_asset_service/Dockerfile
    env_file: ./.env
    volumes:
      - ./backend:/app
    depends_on: [redis]

  scheduler:
    build:
      context: ./backend
      dockerfile: scheduler/Dockerfile
    env_file: ./.env
    volumes:
      - ./backend:/app
    depends_on: [economic_service, sentiment_service, technicals_service, cross_asset_service]

  # --- Frontend ---
  # frontend:
  #   build: ./frontend
  #   ports: ["5173:5173"]
  #   volumes: ["./frontend:/app", "/app/node_modules"]
  #   environment:
  #     - VITE_API_BASE_URL=http://localhost:8000
  #     - VITE_API_KEY=${API_KEY}
  #   depends_on: [api_gateway]

volumes:
  postgres_data:
  redis_data:
